'use strict';

/**
 * Do not edit this file. Add your custom routes in settings-routes.js.
 */

angular.module('ngWordPressApp')
  .config(function ($routeProvider) {

    var enabledPostTypes = ['post', 'event'];

    angular.forEach(enabledPostTypes, function(postType) {

      /**
       * Post archive
       */
      $routeProvider
        .when('/' + postType + 's/', {
          templateUrl: 'views/archive.html',
          controller: 'ArchiveCtrl',
          controllerAs: 'main'
        });

      // Pagination
      $routeProvider
        .when('/' + postType + 's/page/:page/', {
          templateUrl: 'views/archive.html',
          controller: 'ArchiveCtrl',
          controllerAs: 'main'
        });

      /**
       * Single post
       */
      $routeProvider
        .when('/' + postType + '/:slug/', {
          templateUrl: 'views/single.html',
          controller: 'SingleCtrl',
          controllerAs: 'main'
        });
    });

    $routeProvider
      /*
      .when('/:year/:month/:slug/', {
        templateUrl: 'views/single.html',
        controller: 'SingleCtrl',
        controllerAs: 'main'
      })
      .when('/:year/:month/', {
        templateUrl: 'views/archive.html',
        controller: 'ArchiveCtrl',
        controllerAs: 'main'
      })
      .when('/:year/', {
        templateUrl: 'views/archive.html',
        controller: 'ArchiveCtrl',
        controllerAs: 'main'
      }) */
      .when('/404/', {
        templateUrl: 'views/404.html',
        controller: 'ErrorCtrl',
        controllerAs: 'main'
      })
      .when('/:slug/', {
        templateUrl: 'views/page.html',
        controller: 'PageCtrl',
        controllerAs: 'main'
      })
      .when('/', {
        templateUrl: 'views/front-page.html',
        controller: 'PageCtrl',
        controllerAs: 'main'
      })
      .otherwise({
        redirect: '/404/',
      });
  })
  .run(['$rootScope','$location', '$routeParams', 'State', '$route', 'WordPressOptions', function($rootScope, $location, $routeParams, State, $route, WordPressOptions) {

    $rootScope.loaded = false;

    WordPressOptions.then(function(WordPressOptions) {
      $rootScope.WordPressOptions = WordPressOptions;
    });

    $rootScope.$on('$routeChangeSuccess', function() {
      State.update();
      $rootScope.bodyClass = State.getBodyClass();
    });

    $rootScope.$on('cfpLoadingBar:loading', function() {
      $rootScope.loaded = false;
    });

    $rootScope.$on('cfpLoadingBar:completed', function() {
      $rootScope.loaded = true;
    });
  }]);
